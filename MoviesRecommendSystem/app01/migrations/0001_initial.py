# Generated by Django 3.2.5 on 2024-04-07 13:54

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16, verbose_name='管理员名')),
                ('psw', models.CharField(max_length=64, verbose_name='管理员密码')),
                ('login_time', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'tb_admin',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'tb_genre',
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('imdb_id', models.IntegerField()),
                ('duration', models.CharField(blank=True, max_length=256)),
                ('release_time', models.CharField(blank=True, max_length=256)),
                ('intro', models.TextField(blank=True)),
                ('director', models.CharField(blank=True, max_length=256)),
                ('writers', models.CharField(blank=True, max_length=256)),
                ('actors', models.CharField(blank=True, max_length=512)),
                ('like_count', models.IntegerField(default=0)),
                ('genre', models.ManyToManyField(to='app01.Genre')),
            ],
            options={
                'db_table': 'tb_movie',
            },
        ),
        migrations.CreateModel(
            name='Movie_rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField()),
                ('movie_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.movie')),
            ],
            options={
                'db_table': 'tb_movie_ratting',
            },
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='用户名')),
                ('psw', models.CharField(max_length=64, verbose_name='密码')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('icon_url', models.CharField(max_length=256)),
                ('login_time', models.DateTimeField(auto_now_add=True)),
                ('rating_movies', models.ManyToManyField(through='app01.Movie_rating', to='app01.Movie')),
            ],
            options={
                'db_table': 'tb_userinfo',
            },
        ),
        migrations.CreateModel(
            name='User_rec',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(verbose_name='相似度')),
                ('movie_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.movie')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.userinfo')),
            ],
            options={
                'db_table': 'tb_user_rec',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.SmallIntegerField(choices=[(1, '紧急'), (2, '重要'), (3, '一般')], default=1, verbose_name='级别')),
                ('title', models.CharField(max_length=64, verbose_name='标题')),
                ('detail', models.TextField(max_length=128, verbose_name='详细信息')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.admin', verbose_name='负责人')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oid', models.CharField(max_length=64, verbose_name='订单号')),
                ('title', models.CharField(max_length=64, verbose_name='商品名')),
                ('price', models.IntegerField(verbose_name='价格')),
                ('status', models.SmallIntegerField(choices=[(1, '待支付'), (2, '已支付')], default=1, verbose_name='状态')),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.admin', verbose_name='管理员')),
            ],
        ),
        migrations.CreateModel(
            name='Movie_similarity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(verbose_name='相似度')),
                ('movie_id1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='similar_movies_1', to='app01.movie')),
                ('movie_id2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='similar_movies_2', to='app01.movie')),
            ],
            options={
                'db_table': 'tb_movie_similarity',
            },
        ),
        migrations.AddField(
            model_name='movie_rating',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.userinfo'),
        ),
        migrations.AddField(
            model_name='movie',
            name='movie_similarity',
            field=models.ManyToManyField(related_name='_app01_movie_movie_similarity_+', through='app01.Movie_similarity', to='app01.Movie'),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(blank=True, max_length=256)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.movie')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app01.userinfo')),
            ],
            options={
                'db_table': 'tb_comment',
            },
        ),
    ]
